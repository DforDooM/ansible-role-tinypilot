#!/bin/bash
#
# Change the hostname of the machine.

# Exit on unset variable.
set -u

# Exit on first error.
set -e

readonly VALID_HOSTNAME_PATTERN='^[-0-9A-Za-z]+$'
readonly MARKER_START="# AUTOGENERATED BY TINYPILOT <<<<<"
readonly MARKER_END="# >>>>> AUTOGENERATED BY TINYPILOT"

print_help() {
  cat << EOF
Usage: ${0##*/} [-h] new_hostname
Change the hostname of this machine.
  -h Display this help and exit.
EOF
}

# Parse command-line arguments.
while getopts "h" opt; do
  case "${opt}" in
    h)
      print_help
      exit
      ;;
    *)
      print_help >&2
      exit 1
  esac
done

# Ensure 'new_hostname' is given.
shift $((OPTIND - 1))
if [[ ! $* ]]; then
  echo "Input parameter missing: new_hostname" >&2
  exit 1
fi

# Validate 'new_hostname' parameter.
# See here for the rules:
# https://man7.org/linux/man-pages/man7/hostname.7.html
new_hostname="$1"
if ! [[ "$new_hostname" =~ $VALID_HOSTNAME_PATTERN ]] \
  || [[ "$new_hostname" == -* ]] \
  || [[ "$new_hostname" == "localhost" ]] \
  || [[ ${#new_hostname} -gt 63 ]] \
  ; then
  echo "Invalid hostname" >&2
  exit 1
fi

# Retrieve original `/etc/hosts`.
# - Read file line by line, make sure to preserve all whitespace.
# - Remove all marker sections.
etc_hosts_original=()
is_in_marker_section=false
while IFS= read -r line; do
  if $is_in_marker_section && [[ "$line" == "$MARKER_END" ]]; then
    is_in_marker_section=false
    continue
  fi
  if $is_in_marker_section || [[ "$line" == "$MARKER_START" ]]; then
    is_in_marker_section=true
    continue
  fi
  etc_hosts_original+=("$line")
done < /etc/hosts

if $is_in_marker_section; then
  echo "Unclosed marker section" >&2
  exit 1
fi

# Populate new hostname to system files.
old_etc_hosts=$(printf "%s\n" "${etc_hosts_original[@]}")
printf "%s\n127.0.1.1 %s\n%s\n%s\n" \
  "$MARKER_START" "$new_hostname" "$MARKER_END" "$old_etc_hosts" \
  > /etc/hosts
echo "$new_hostname" > /etc/hostname
